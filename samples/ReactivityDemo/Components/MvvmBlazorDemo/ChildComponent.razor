@namespace ReactivityDemo.Components.Comparison.MvvmBlazorDemo
@using ReactivityDemo.Models.Comparison.MvvmBlazorModels
@using ReactivityDemo.Helpers

<h3>ChildComponent</h3>

<div><button class="btn btn-link" @onclick="ChangeName">Change Name</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="AddSkill">Add Skill</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="ChangeSkillName">Change First</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="RemoveLast">Remove Last</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="ChangeRemoved">Change Removed</button><span class="text-danger">should not re-render</span></div>
<div><button class="btn btn-link" @onclick="ChangeDogName">Change Dog Name</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="ChangeDog">Change Dog</button><span class="text-success">should re-render</span></div>
<div><button class="btn btn-link" @onclick="ChangeOldDogName">Change Old Dog Name</button><span class="text-danger">should not re-render</span></div>

@code {
    [Parameter] public Person Person { get; set; }

    private void ChangeName()
    {
        Person.Name = StringHelper.RandomString();
    }

    private void AddSkill()
    {
        var newItem = new Skill()
        {
            Title = StringHelper.RandomString()
        };

        Person.Skills.Add(newItem);
    }

    private void ChangeSkillName()
    {
        var skill = Person.Skills.FirstOrDefault();

        if (skill == null)
            return;

        skill.Title = StringHelper.RandomString();
    }

    private Skill removed;

    private void RemoveLast()
    {
        removed = Person.Skills.LastOrDefault();

        if (removed == null)
            return;

        this.Person.Skills.RemoveAt(Person.Skills.Count - 1);
    }

    private void ChangeRemoved()
    {
        if (removed == null)
            return;

        removed.Title = StringHelper.RandomString();
    }

    private void ChangeDogName()
    {
        Person.Dog.Name = StringHelper.RandomString();
    }

    private Dog oldDog;

    private void ChangeDog()
    {
        oldDog = Person.Dog;
        Person.Dog = new Dog { Name = "New Dog" };
    }

    private void ChangeOldDogName()
    {
        if (oldDog == null)
            return;

        oldDog.Name = StringHelper.RandomString();
    }
}
